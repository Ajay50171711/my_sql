CREATE TABLE students (
    id INT PRIMARY KEY,
    name VARCHAR(100),
    age INT,
    grade CHAR(1),
    marks INT,
    city VARCHAR(50)
);

  INSERT INTO students (id, name, age, grade, marks, city) VALUES
(1, 'Alice', 14, 'A', 90, 'New York'),
(2, 'Bob', 15, 'B', 75, 'Los Angeles'),
(3, 'Charlie', 14, 'C', 60, 'Chicago'),
(4, 'Diana', 15, 'A', 85, 'New York'),
(5, 'Eve', 14, 'B', 70, 'Houston'),
(6, 'Frank', 16, 'C', 55, 'Chicago'),
(7, 'Grace', 15, 'A', 95, 'Los Angeles');


1)Question: Add 10 bonus marks to each student's marks.
Solution:
SELECT id, name, marks, marks + 10 AS total_marks_with_bonus 
FROM students;


2)Question: Calculate the percentage (out of 100) for each student.
Solution:
SELECT id, name, marks, (marks / 100) * 100 AS percentage 
FROM students;


3)Question: Find students who are older than 14 and have marks greater than 70.
Solution:
SELECT * 
FROM students 
WHERE age > 14 AND marks > 70;


4)Question: List students who either live in New York or have grade A.
Solution:
SELECT * 
FROM students 
WHERE city = 'New York' OR grade = 'A';


5)Question: Find students who do not have grade B.
Solution:
SELECT * 
FROM students 
WHERE NOT grade = 'B';


6)Question: Combine each student's name with their city into a single string.
Solution:
SELECT CONCAT(name, ', ', city) AS name_with_city 
FROM students;


7)Question: Find students whose names start with A.
Solution:
SELECT * 
FROM students 
WHERE name LIKE 'A%';



8)Question: List students from New York, Chicago, or Los Angeles.
Solution:
SELECT * 
FROM students 
WHERE city IN ('New York', 'Chicago', 'Los Angeles');


9)Question: List students who do not belong to Houston or Los Angeles.
Solution:
SELECT * 
FROM students 
WHERE city NOT IN ('Houston', 'Los Angeles');


10)Question: Find students whose marks are between 60 and 90.
Solution:
SELECT * 
FROM students 
WHERE marks BETWEEN 60 AND 90;


11)Question: Find students who have the same grade as students from Chicago.
Solution:
SELECT * 
FROM students 
WHERE grade IN (
    SELECT grade 
    FROM students 
    WHERE city = 'Chicago'
);


12)Question:
Write a query to categorize students as Pass or Fail based on their marks (passing marks: 60).
Solution:
SELECT id, name, marks,
       CASE 
           WHEN marks >= 60 THEN 'Pass'
           ELSE 'Fail'
       END AS result
FROM students;


13)Question:
Create a query to assign a scholarship amount based on the grade:
A: 1000
B: 500
C: 200
Solution:
SELECT id, name, grade,
       CASE 
           WHEN grade = 'A' THEN 1000
           WHEN grade = 'B' THEN 500
           WHEN grade = 'C' THEN 200
           ELSE 0
       END AS scholarship_amount
FROM students;


14)Question:
Label students as Teen if their age is between 13 and 19, otherwise adult.
Solution:
SELECT id, name, age,
       CASE 
           WHEN age BETWEEN 13 AND 19 THEN 'Teen'
           ELSE 'adult'
       END AS age_group
FROM students;

15)Question
Fetch the details of the student with the highest marks.
Solution:
SELECT * 
FROM students
WHERE marks = (SELECT MAX(marks) FROM students);


16)Question:
List the students whose marks are above the average marks.
Solution:
SELECT *
FROM students
WHERE marks > (SELECT AVG(marks) FROM students);


17)Question:
Find students who live in cities with more than one student.
Solution:
SELECT * 
FROM students
WHERE city IN (
    SELECT city
    FROM students
    GROUP BY city
    HAVING COUNT(*) > 1
);


18)Question:
Fetch the details of the student with the second-highest marks.
Solution:
SELECT *
FROM students
WHERE marks = (
    SELECT MAX(marks) 
    FROM students
    WHERE marks < (SELECT MAX(marks) FROM students)
);



19)Question:
List all cities where students with grade A reside.
Solution:
SELECT DISTINCT city
FROM students
WHERE grade = 'A';


20)Question:
Find all students who live in the same city as the top scorer.
Solution:
SELECT *
FROM students
WHERE city = (
    SELECT city 
    FROM students
    WHERE marks = (SELECT MAX(marks) FROM students)
);


21)Question:
Fetch all students who are not in grade C.
Solution:
SELECT * 
FROM students
WHERE grade <> 'C';


22)Question:
List all cities where no student has a grade of A.
Solution:
SELECT DISTINCT city 
FROM students
WHERE city NOT IN (
    SELECT DISTINCT city 
    FROM students
    WHERE grade = 'A'
);


23)Question:
Find students who live in cities where the average marks are below 70.
Solution:
SELECT *
FROM students
WHERE city IN (
    SELECT city
    FROM students
    GROUP BY city
    HAVING AVG(marks) < 70
);



